name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: - name: Deploy via SSH
  uses: appleboy/ssh-action@v0.1.7
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ubuntu
    key: ${{ secrets.EC2_SSH_KEY }}
    port: 22
    script: |
      set -e

      APP_DIR="/home/ubuntu/food-project"
      STAGING_DIR="/home/ubuntu/food-project_staging"

      echo "ðŸš€ Deploying food-project..."

      # Ensure directories exist
      mkdir -p "$APP_DIR"
      mkdir -p "$STAGING_DIR"

      # Clone or update staging repo
      if [ ! -d "$STAGING_DIR/.git" ]; then
        git clone https://github.com/shivamshete92/food-project.git "$STAGING_DIR"
      else
        cd "$STAGING_DIR"
        git reset --hard -q
        git pull origin main -q
      fi

      # Sync files to app directory
      rsync -av --delete "$STAGING_DIR/" "$APP_DIR/"

      # Kill any existing PHP server
      pkill -f "php -S 0.0.0.0:8080" || true

      # Start PHP built-in server
      nohup php -S 0.0.0.0:8080 -t "$APP_DIR" > "$APP_DIR/server.log" 2>&1 &

      echo "âœ… Deployment completed! Visit http://<EC2_PUBLIC_IP>:8080"
